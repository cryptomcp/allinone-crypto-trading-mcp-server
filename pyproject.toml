[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "allinone-crypto-trading-mcp-server"
version = "2.1.0"
description = "Comprehensive MCP server for cryptocurrency trading, analytics, and automation"
authors = [{name = "CryptoMCP", email = "info@cryptomcp.dev"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
keywords = ["mcp", "cryptocurrency", "trading", "solana", "ethereum", "defi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=1.0.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
    "aiohttp>=3.8.0",
    "websockets>=11.0.0",
    "web3>=6.11.0",
    "solders>=0.18.0",
    "solana>=0.30.0",
    "ccxt>=4.1.0",
    "python-telegram-bot>=20.7",
    "python-dotenv>=1.0.0",
    "cryptography>=41.0.0",
    "base58>=2.1.0",
    "construct>=2.10.0",
    "anchorpy>=0.19.0",
    "requests>=2.31.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "aiosqlite>=0.19.0",
    "loguru>=0.7.0",
    "tenacity>=8.2.0",
    "schedule>=1.2.0",
    "pytz>=2023.3",
    "dataclasses-json>=0.6.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "ruff>=0.0.290",
    "mypy>=1.6.0",
    "pre-commit>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/cryptomcp/allinone-crypto-trading-mcp-server"
Repository = "https://github.com/cryptomcp/allinone-crypto-trading-mcp-server"
Documentation = "https://docs.cryptomcp.dev"
Issues = "https://github.com/cryptomcp/allinone-crypto-trading-mcp-server/issues"

[project.scripts]
allinone-crypto-mcp = "allinone_crypto_mcp.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=src --cov-report=term-missing --cov-report=html"